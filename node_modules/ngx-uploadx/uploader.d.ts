import { UploadStatus, UploadItem, UploaderOptions } from './interfaces';
/**
 * Implements XHR/CORS Resumable Upload
 * @see
 * https://developers.google.com/drive/v3/web/resumable-upload
 * https://developer.vimeo.com/api/upload/videos#resumable-upload
 */
export declare class Uploader implements UploaderOptions {
    private file;
    private options;
    headers: any;
    metadata: any;
    method: string;
    mimeType: string;
    name: string;
    progress: number;
    remaining: number;
    response: any;
    size: number;
    speed: number;
    uploadId: string;
    url: any;
    private startTime;
    private _status;
    private retry;
    private abort;
    /**
     * Creates an instance of Uploader.
     */
    constructor(file: File, options: UploaderOptions);
    /**
     * Set individual file options and add to queue
     */
    configure(item?: UploadItem): void;
    status: UploadStatus;
    /**
     * Emit current state
     */
    private notifyState();
    private setHeaders(xhr);
    /**
     * Initiate upload
     */
    upload(): void;
    /**
     * Request upload state after 5xx errors or network failures
     */
    private resume();
    /**
     * Content upload
     */
    private sendFile(start?);
}

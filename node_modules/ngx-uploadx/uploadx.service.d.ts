import { Subject } from 'rxjs/Subject';
import { Observable } from 'rxjs/Observable';
import { UploadxOptions, UploadState, UploadxControlEvent, UploaderOptions } from './interfaces';
/**
 *
 */
export declare class UploadxService {
    subj: Subject<UploadState>;
    private queue;
    private concurrency;
    private autoUpload;
    private options;
    readonly uploaderOptions: UploaderOptions;
    /**
     * Set global module options
     */
    init(options: UploadxOptions): Observable<UploadState>;
    /**
     *
     * Create Uploader and add to the queue
     */
    handleFileList(fileList: FileList): void;
    /**
     * Control upload status
     * @example
     * this.uploadService.control({ action: 'pauseAll' });
     *
     */
    control(event: UploadxControlEvent): void;
    /**
     * Queue management
     */
    private processQueue();
}

/// <reference types="datatables.net" />
import { ComponentFactoryResolver, ElementRef, QueryList } from '@angular/core';
import { DatatablesColumnComponent } from '../datatables-column/datatables-column.component';
import { Datatables } from './datatables';
export declare class DatatablesComponent extends Datatables {
    private elementRef;
    private componentFactoryResolver;
    private readonly ROW_SELECTOR_CLASS;
    columns: QueryList<DatatablesColumnComponent>;
    selectionMode: string;
    tableClass: string;
    containerClass: string;
    data: Object[];
    ajax: string | DataTables.AjaxSettings | DataTables.FunctionAjax;
    options: DataTables.Settings;
    protected tableElementRef: ElementRef;
    private datatablesTemplateComponent;
    private templateViewContainerRef;
    constructor(elementRef: ElementRef, componentFactoryResolver: ComponentFactoryResolver);
    /*******  LIFECYCLE CALLBACK FUNCTIONS *******/
    /**
     * callback on pre-construct of class
     */
    ngOnInit(): void;
    /**
     * callback on view initialization
     */
    ngAfterViewInit(): void;
    /**
     *
     */
    ngAfterViewChecked(): void;
    /******* PRIVATE DATATABLES INIT FUNCTIONS *******/
    /**
     * DataTables new instance initialization
     */
    protected buildDataTable(): void;
    /**
     * initialization of Custom Column Headers
     * @param {Node} thead
     */
    private initColumnHeader(thead);
    /**
     * Overriding and merging DataTables columns(options) and ngx-datatables-column settings.
     * Note that user defined columns and columnDefs options overrides ngx-datatables-column settings
     * However if columnDefs or columns must be used fully used, consider using a no ngx-datatables-column
     * ngx-datatables or ngxDatatables Direcetive
     * @returns {DataTables.ColumnDefsSettings[]}
     */
    private initColumnDefs();
    /*******  PRIVATE DOM MANIPULATION AND DYNAMIC RENDERING FUNCTIONS *******/
    private renderDirtyData();
    /**
     * Custom row selector when a column is flag as a rowSelector
     * @param {DataTables.ColumnDefsSettings} columnDef
     */
    private buildRowSelectorColumn(columnDef);
    /**
     * Dynamic building and rendering of custom Column Components using ngxDataTablesTemplate
     */
    private buildTemplateComponent(currentData);
    /*******  PROTECTED CALLBACK FUNCTIONS *******/
    /**
     * Callback function on Table Header init
     * @param {Node} thead
     * @param {any[]} data
     * @param {number} start
     * @param {number} end
     * @param {any[]} display
     */
    protected onHeaderCallback(thead: Node, data: any[], start: number, end: number, display: any[]): void;
}

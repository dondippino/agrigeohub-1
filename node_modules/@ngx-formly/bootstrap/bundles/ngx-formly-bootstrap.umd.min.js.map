{
  "version": 3,
  "file": "ngx-formly-bootstrap.umd.min.js",
  "sources": [
    "ng://@ngx-formly/bootstrap/node_modules/tslib/tslib.es6.js",
    "ng://@ngx-formly/bootstrap/out/lib/types/checkbox.ts",
    "ng://@ngx-formly/bootstrap/out/lib/types/multicheckbox.ts",
    "ng://@ngx-formly/bootstrap/out/lib/types/input.ts",
    "ng://@ngx-formly/bootstrap/out/lib/types/radio.ts",
    "ng://@ngx-formly/bootstrap/out/lib/types/textarea.ts",
    "ng://@ngx-formly/bootstrap/out/lib/types/select.ts",
    "ng://@ngx-formly/bootstrap/out/lib/wrappers/fieldset.ts",
    "ng://@ngx-formly/bootstrap/out/lib/wrappers/label.ts",
    "ng://@ngx-formly/bootstrap/out/lib/wrappers/description.ts",
    "ng://@ngx-formly/bootstrap/out/lib/wrappers/message-validation.ts",
    "ng://@ngx-formly/bootstrap/out/lib/wrappers/addons.ts",
    "ng://@ngx-formly/bootstrap/out/lib/run/description.ts",
    "ng://@ngx-formly/bootstrap/out/lib/run/validation.ts",
    "ng://@ngx-formly/bootstrap/out/lib/run/addon.ts",
    "ng://@ngx-formly/bootstrap/out/lib/bootstrap.config.ts",
    "ng://@ngx-formly/bootstrap/out/lib/bootstrap.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-checkbox',\n  template: `\n    <label class=\"custom-control custom-checkbox\">\n      <input type=\"checkbox\" [formControl]=\"formControl\"\n        [attr.invalid]=\"showError\"\n        [indeterminate]=\"to.indeterminate && model[key] === undefined\"\n        [formlyAttributes]=\"field\" class=\"custom-control-input\">\n        <span class=\"custom-control-label\">\n          {{ to.label }}\n          <ng-container *ngIf=\"to.required && to.hideRequiredMarker !== true\">*</ng-container>\n        </span>\n        <span class=\"custom-control-indicator\"></span>\n    </label>\n  `,\n})\nexport class FormlyFieldCheckbox extends FieldType {}\n",
    "import { Component } from '@angular/core';\nimport { FormGroup, FormControl, AbstractControl } from '@angular/forms';\nimport { FieldType, FormlyFieldConfig } from '@ngx-formly/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'formly-field-multicheckbox',\n  template: `\n    <div *ngFor=\"let option of to.options; let i = index;\" class=\"checkbox\">\n      <label class=\"custom-control custom-checkbox\">\n        <input type=\"checkbox\"\n          [value]=\"option.value\"\n          [id]=\"id + '_' + i\"\n          [formControl]=\"formControl.get(option.key)\"\n          [formlyAttributes]=\"field\" class=\"custom-control-input\">\n        <span class=\"custom-control-label\">{{ option.value }}</span>\n        <span class=\"custom-control-indicator\"></span>\n      </label>\n    </div>\n  `,\n})\nexport class FormlyFieldMultiCheckbox extends FieldType {\n  static createControl(model: any, field: FormlyFieldConfig): AbstractControl {\n    if (!(field.templateOptions.options instanceof Observable)) {\n      let controlGroupConfig = field.templateOptions.options.reduce((previous, option) => {\n        previous[option.key] = new FormControl(model ? model[option.key] : undefined);\n        return previous;\n      }, {});\n\n      return new FormGroup(\n        controlGroupConfig,\n        field.validators ? field.validators.validation : undefined,\n        field.asyncValidators ? field.asyncValidators.validation : undefined,\n      );\n    } else {\n      throw new Error(`[Formly Error] You cannot pass an Observable to a multicheckbox yet.`);\n    }\n  }\n}\n",
    "import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-input',\n  template: `\n    <input *ngIf=\"type !== 'number' else numberTmp\" [type]=\"type\" [formControl]=\"formControl\" class=\"form-control\" [formlyAttributes]=\"field\" [class.is-invalid]=\"showError\">\n    <ng-template #numberTmp>\n      <input type=\"number\" [formControl]=\"formControl\" class=\"form-control\" [formlyAttributes]=\"field\" [class.is-invalid]=\"showError\">\n    </ng-template>\n  `,\n  host: {\n    // temporary fix until removing bootstrap 3 support.\n    '[class.d-inline-flex]': 'to.addonLeft || to.addonRight',\n    '[class.custom-file]': 'to.addonLeft || to.addonRight',\n  },\n})\nexport class FormlyFieldInput extends FieldType {\n  get type() {\n    return this.to.type || 'text';\n  }\n}\n",
    "import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-radio',\n  template: `\n    <div [formGroup]=\"form\">\n      <div *ngFor=\"let option of to.options; let i = index;\" class=\"radio\">\n        <label class=\"custom-control custom-radio\">\n          <input\n            [name]=\"id\"\n            [id]=\"id + '_' + i\"\n            type=\"radio\"\n            [value]=\"option.label ? option.value : option.key\"\n            [formControl]=\"formControl\"\n            [formlyAttributes]=\"field\" class=\"custom-control-input\">\n\n          <span class=\"custom-control-label\">{{ option.label ? option.label : option.value }}</span>\n          <span class=\"custom-control-indicator\"></span>\n        </label>\n      </div>\n    </div>\n  `,\n})\nexport class FormlyFieldRadio extends FieldType {}\n",
    "import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-textarea',\n  template: `\n    <textarea [name]=\"key\" [formControl]=\"formControl\" [cols]=\"to.cols\"\n      [rows]=\"to.rows\" class=\"form-control\" [class.is-invalid]=\"showError\"\n      [formlyAttributes]=\"field\">\n    </textarea>\n  `,\n})\nexport class FormlyFieldTextArea extends FieldType {\n}\n",
    "import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\nimport { Observable, of as observableOf } from 'rxjs';\n\nexport class SelectOption {\n  label: string;\n  value?: any;\n  group?: SelectOption[];\n  disabled?: boolean;\n  [key: string]: any;\n\n  constructor(label: string, value?: any, children?: SelectOption[]) {\n    this.label = label;\n    this.value = value;\n    this.group = children;\n  }\n}\n\n@Component({\n  selector: 'formly-field-select',\n  template: `\n    <select *ngIf=\"to.multiple; else singleSelect\" class=\"form-control\"\n      [formControl]=\"formControl\"\n      [class.is-invalid]=\"showError\"\n      [multiple]=\"true\"\n      [formlyAttributes]=\"field\">\n        <ng-container *ngFor=\"let item of selectOptions | async\">\n         <optgroup *ngIf=\"item.group\" label=\"{{item.label}}\">\n            <option *ngFor=\"let child of item.group\" [value]=\"child[valueProp]\" [disabled]=\"child.disabled\">\n              {{ child[labelProp] }}\n            </option>\n          </optgroup>\n          <option *ngIf=\"!item.group\" [value]=\"item[valueProp]\" [disabled]=\"item.disabled\">{{ item[labelProp] }}</option>\n        </ng-container>\n    </select>\n\n    <ng-template #singleSelect>\n      <select class=\"form-control\"\n        [formControl]=\"formControl\"\n        [class.is-invalid]=\"showError\"\n        [formlyAttributes]=\"field\">\n        <option *ngIf=\"to.placeholder\" value=\"\">{{ to.placeholder }}</option>\n        <ng-container *ngFor=\"let item of selectOptions | async\">\n          <optgroup *ngIf=\"item.group\" label=\"{{item.label}}\">\n            <option *ngFor=\"let child of item.group\" [value]=\"child[valueProp]\" [disabled]=\"child.disabled\">\n              {{ child[labelProp] }}\n            </option>\n          </optgroup>\n          <option *ngIf=\"!item.group\" [value]=\"item[valueProp]\" [disabled]=\"item.disabled\">{{ item[labelProp] }}</option>\n        </ng-container>\n      </select>\n    </ng-template>\n  `,\n})\nexport class FormlyFieldSelect extends FieldType {\n  get labelProp(): string { return this.to.labelProp || 'label'; }\n  get valueProp(): string { return this.to.valueProp || 'value'; }\n  get groupProp(): string { return this.to.groupProp || 'group'; }\n\n  get selectOptions(): Observable<any[]> {\n    if (!(this.to.options instanceof Observable)) {\n      const options: SelectOption[] = [],\n        groups: { [key: string]: SelectOption[] } = {};\n\n      this.to.options.map((option: SelectOption) => {\n        if (!option[this.groupProp]) {\n          options.push(option);\n        } else {\n          if (groups[option[this.groupProp]]) {\n            groups[option[this.groupProp]].push(option);\n          } else {\n            groups[option[this.groupProp]] = [option];\n            options.push({\n              label: option[this.groupProp],\n              group: groups[option[this.groupProp]],\n            });\n          }\n        }\n      });\n\n      return observableOf(options);\n    } else {\n      // return observable directly\n      return this.to.options;\n    }\n  }\n}\n",
    "import { Component, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-wrapper-fieldset',\n  template: `\n    <div class=\"form-group\" [class.has-error]=\"showError\">\n      <ng-template #fieldComponent></ng-template>\n    </div>\n  `,\n})\nexport class FormlyWrapperFieldset extends FieldWrapper {\n  @ViewChild('fieldComponent', {read: ViewContainerRef}) fieldComponent: ViewContainerRef;\n}\n",
    "import { Component, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-wrapper-label',\n  template: `\n    <label [attr.for]=\"id\" class=\"form-control-label control-label\" *ngIf=\"to.label\">\n      {{ to.label }}\n      <ng-container *ngIf=\"to.required && to.hideRequiredMarker !== true\">*</ng-container>\n    </label>\n    <ng-template #fieldComponent></ng-template>\n  `,\n})\nexport class FormlyWrapperLabel extends FieldWrapper {\n  @ViewChild('fieldComponent', {read: ViewContainerRef}) fieldComponent: ViewContainerRef;\n}\n",
    "import { Component, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-wrapper-description',\n  template: `\n    <ng-template #fieldComponent></ng-template>\n    <div *ngIf=\"to.description\">\n      <small class=\"text-muted\">{{ to.description }}</small>\n    </div>\n  `,\n})\nexport class FormlyWrapperDescription extends FieldWrapper {\n  @ViewChild('fieldComponent', {read: ViewContainerRef}) fieldComponent: ViewContainerRef;\n}\n",
    "import { Component, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-wrapper-validation-messages',\n  template: `\n    <ng-template #fieldComponent></ng-template>\n    <div *ngIf=\"showError\">\n      <small class=\"text-danger invalid-feedback\" [style.display]=\"'block'\" role=\"alert\" [id]=\"validationId\">\n        <formly-validation-message [field]=\"field\"></formly-validation-message>\n      </small>\n    </div>\n  `,\n})\nexport class FormlyWrapperValidationMessages extends FieldWrapper {\n  @ViewChild('fieldComponent', {read: ViewContainerRef}) fieldComponent: ViewContainerRef;\n\n  get validationId() {\n    return this.field.id + '-message';\n  }\n}\n",
    "import { Component, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-wrapper-addons',\n  template: `\n    <div class=\"input-group\">\n      <div class=\"input-group-addon input-group-prepend\"\n        *ngIf=\"to.addonLeft\"\n        [ngStyle]=\"{cursor: to.addonLeft.onClick ? 'pointer' : 'inherit'}\"\n        (click)=\"addonLeftClick($event)\">\n        <i class=\"input-group-text\" [ngClass]=\"to.addonLeft.class\" *ngIf=\"to.addonLeft.class\"></i>\n        <span *ngIf=\"to.addonLeft.text\" class=\"input-group-text\">{{ to.addonLeft.text }}</span>\n      </div>\n      <ng-template #fieldComponent></ng-template>\n      <div class=\"input-group-addon input-group-append\"\n        *ngIf=\"to.addonRight\"\n        [ngStyle]=\"{cursor: to.addonRight.onClick ? 'pointer' : 'inherit'}\"\n        (click)=\"addonRightClick($event)\">\n        <i class=\"input-group-text\" [ngClass]=\"to.addonRight.class\" *ngIf=\"to.addonRight.class\"></i>\n        <span *ngIf=\"to.addonRight.text\" class=\"input-group-text\">{{ to.addonRight.text }}</span>\n      </div>\n    </div>\n  `,\n  styles: [`\n    :host ::ng-deep .input-group>:not(:first-child)> .form-control {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n    :host ::ng-deep .input-group>:not(:last-child)> .form-control {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  `],\n})\nexport class FormlyWrapperAddons extends FieldWrapper {\n  @ViewChild('fieldComponent', {read: ViewContainerRef}) fieldComponent: ViewContainerRef;\n\n  addonRightClick($event: any) {\n    if (this.to.addonRight.onClick) {\n      this.to.addonRight.onClick(this.to, this, $event);\n    }\n  }\n\n  addonLeftClick($event: any) {\n    if (this.to.addonLeft.onClick) {\n      this.to.addonLeft.onClick(this.to, this, $event);\n    }\n  }\n}\n",
    "import { FormlyFieldConfig, FormlyConfig } from '@ngx-formly/core';\n\nexport class TemplateDescription {\n  run(fc: FormlyConfig) {\n    fc.templateManipulators.postWrapper.push((field: FormlyFieldConfig) => 'description');\n  }\n}\n",
    "import { FormlyFieldConfig, FormlyConfig } from '@ngx-formly/core';\n\nexport class TemplateValidation {\n  run(fc: FormlyConfig) {\n    fc.templateManipulators.postWrapper.push((field: FormlyFieldConfig) => 'validation-message');\n  }\n}\n",
    "import { FormlyConfig } from '@ngx-formly/core';\n\nexport class TemplateAddons {\n  run(fc: FormlyConfig) {\n    fc.templateManipulators.postWrapper.push((field) => {\n      if (field && field.templateOptions && (field.templateOptions.addonLeft || field.templateOptions.addonRight)) {\n        return 'addons';\n      }\n    });\n  }\n}\n",
    "import { ConfigOption } from '@ngx-formly/core';\nimport { FormlyWrapperAddons } from './wrappers/addons';\nimport { TemplateDescription } from './run/description';\nimport { TemplateValidation } from './run/validation';\nimport { TemplateAddons } from './run/addon';\nimport {\n  FormlyFieldInput,\n  FormlyFieldCheckbox,\n  FormlyFieldRadio,\n  FormlyFieldSelect,\n  FormlyFieldTextArea,\n  FormlyFieldMultiCheckbox,\n} from './types/types';\nimport {\n  FormlyWrapperLabel,\n  FormlyWrapperDescription,\n  FormlyWrapperValidationMessages,\n  FormlyWrapperFieldset,\n} from './wrappers/wrappers';\n\nexport const FIELD_TYPE_COMPONENTS = [\n  // types\n  FormlyFieldInput,\n  FormlyFieldCheckbox,\n  FormlyFieldRadio,\n  FormlyFieldSelect,\n  FormlyFieldTextArea,\n  FormlyFieldMultiCheckbox,\n\n  // wrappers\n  FormlyWrapperLabel,\n  FormlyWrapperDescription,\n  FormlyWrapperValidationMessages,\n  FormlyWrapperFieldset,\n  FormlyWrapperAddons,\n];\n\nexport const BOOTSTRAP_FORMLY_CONFIG: ConfigOption = {\n  types: [\n    {\n      name: 'input',\n      component: FormlyFieldInput,\n      wrappers: ['fieldset', 'label'],\n    },\n    {\n      name: 'checkbox',\n      component: FormlyFieldCheckbox,\n      wrappers: ['fieldset'],\n      defaultOptions: {\n        templateOptions: {\n          indeterminate: true,\n        },\n      },\n    },\n    {\n      name: 'radio',\n      component: FormlyFieldRadio,\n      wrappers: ['fieldset', 'label'],\n      defaultOptions: {\n        templateOptions: {\n          options: [],\n        },\n      },\n    },\n    {\n      name: 'select',\n      component: FormlyFieldSelect,\n      wrappers: ['fieldset', 'label'],\n      defaultOptions: {\n        templateOptions: {\n          options: [],\n        },\n      },\n    },\n    {\n      name: 'textarea',\n      component: FormlyFieldTextArea,\n      wrappers: ['fieldset', 'label'],\n      defaultOptions: {\n        templateOptions: {\n          cols: 1,\n          rows: 1,\n        },\n      },\n    },\n    {\n      name: 'multicheckbox',\n      component: FormlyFieldMultiCheckbox,\n      wrappers: ['fieldset', 'label'],\n      defaultOptions: {\n        templateOptions: {\n          options: [],\n        },\n      },\n    },\n  ],\n  wrappers: [\n    {name: 'label', component: FormlyWrapperLabel},\n    {name: 'description', component: FormlyWrapperDescription},\n    {name: 'validation-message', component: FormlyWrapperValidationMessages},\n    {name: 'fieldset', component: FormlyWrapperFieldset},\n    {name: 'addons', component: FormlyWrapperAddons},\n  ],\n  manipulators: [\n    {class: TemplateDescription, method: 'run'},\n    {class: TemplateValidation, method: 'run'},\n    {class: TemplateAddons, method: 'run'},\n  ],\n};\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { BOOTSTRAP_FORMLY_CONFIG, FIELD_TYPE_COMPONENTS } from './bootstrap.config';\n\n@NgModule({\n  declarations: FIELD_TYPE_COMPONENTS,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot(BOOTSTRAP_FORMLY_CONFIG),\n  ],\n})\nexport class FormlyBootstrapModule {\n}\n"
  ],
  "names": [
    "extendStatics",
    "Object",
    "setPrototypeOf",
    "__proto__",
    "Array",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__extends",
    "__",
    "this",
    "constructor",
    "prototype",
    "create",
    "FormlyFieldCheckbox",
    "_super",
    "tslib_1.__extends",
    "FieldType",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "FormlyFieldMultiCheckbox",
    "createControl",
    "model",
    "field",
    "templateOptions",
    "options",
    "Observable",
    "Error",
    "controlGroupConfig",
    "reduce",
    "previous",
    "option",
    "key",
    "FormControl",
    "undefined",
    "FormGroup",
    "validators",
    "validation",
    "asyncValidators",
    "FormlyFieldInput",
    "defineProperty",
    "get",
    "to",
    "host",
    "[class.d-inline-flex]",
    "[class.custom-file]",
    "FormlyFieldRadio",
    "FormlyFieldTextArea",
    "FormlyFieldSelect",
    "_this",
    "options_1",
    "groups_1",
    "map",
    "groupProp",
    "push",
    "label",
    "group",
    "observableOf",
    "FormlyWrapperFieldset",
    "FieldWrapper",
    "fieldComponent",
    "ViewChild",
    "read",
    "ViewContainerRef",
    "FormlyWrapperLabel",
    "FormlyWrapperDescription",
    "FormlyWrapperValidationMessages",
    "id",
    "FormlyWrapperAddons",
    "addonRightClick",
    "$event",
    "onClick",
    "addonLeftClick",
    "styles",
    "TemplateDescription",
    "run",
    "fc",
    "templateManipulators",
    "postWrapper",
    "TemplateValidation",
    "TemplateAddons",
    "FIELD_TYPE_COMPONENTS",
    "BOOTSTRAP_FORMLY_CONFIG",
    "types",
    "name",
    "component",
    "wrappers",
    "defaultOptions",
    "indeterminate",
    "cols",
    "rows",
    "manipulators",
    "class",
    "method",
    "FormlyBootstrapModule",
    "NgModule",
    "declarations",
    "imports",
    "CommonModule",
    "ReactiveFormsModule",
    "FormlyModule",
    "forRoot"
  ],
  "mappings": "0gBAgBA,IAAIA,EAAgBC,OAAOC,gBACtB,CAAEC,UAAW,cAAgBC,OAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIC,KAAKD,EAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,KAEzE,SAAgBE,EAAUJ,EAAGC,GAEzB,SAASI,IAAOC,KAAKC,YAAcP,EADnCL,EAAcK,EAAGC,GAEjBD,EAAEQ,UAAkB,OAANP,EAAaL,OAAOa,OAAOR,IAAMI,EAAGG,UAAYP,EAAEO,UAAW,IAAIH,GCvBnF,IAAAK,EAAA,SAAAC,GAAA,SAAAD,0DAmByCE,EAAzCA,EAAAA,KAnBA,CAmByCC,EAAAA,yBAhBzC,CAAAC,KAACC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,wBACVC,SAAU,qiBCLZ,IAAAC,EAAA,SAAAR,GAAA,SAAAQ,0DAqB8CP,EAA9CA,EAAAA,GACSO,EAATC,cAAE,SAAqBC,EAAYC,GAC/B,GAAMA,EAAMC,gBAAgBC,mBAAmBC,EAAAA,WAY7C,MAAM,IAAIC,MAAM,wEAXhB,IAAIC,EAAqBL,EAAMC,gBAAgBC,QAAQI,OAAO,SAACC,EAAUC,GAEvE,OADAD,EAASC,EAAOC,KAAO,IAAIC,EAAAA,YAAYX,EAAQA,EAAMS,EAAOC,KAAOE,WAC5DJ,GACN,IAEH,OAAO,IAAIK,EAAAA,UACTP,EACAL,EAAMa,WAAab,EAAMa,WAAWC,WAAaH,UACjDX,EAAMe,gBAAkBf,EAAMe,gBAAgBD,WAAaH,cAhCnE,CAqB8CpB,EAAAA,yBAhB9C,CAAAC,KAACC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,6BACVC,SAAU,ugBCPZ,IAAAoB,EAAA,SAAA3B,GAAA,SAAA2B,0DAiBsC1B,EAAtCA,EAAAA,GACEhB,OAAF2C,eAAMD,EAAN9B,UAAA,OAAA,CAAAgC,IAAE,WACE,OAAOlC,KAAKmC,GAAG3B,MAAQ,0CAnB3B,CAiBsCD,EAAAA,yBAdtC,CAAAC,KAACC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,qBACVC,SAAU,kXAMVwB,KAAM,CAEJC,wBAAyB,gCACzBC,sBAAuB,qCCd3B,IAAAC,EAAA,SAAAlC,GAAA,SAAAkC,0DAwBsCjC,EAAtCA,EAAAA,KAxBA,CAwBsCC,EAAAA,yBArBtC,CAAAC,KAACC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,qBACVC,SAAU,gpBCLZ,IAAA4B,EAAA,SAAAnC,GAAA,SAAAmC,0DAYyClC,EAAzCA,EAAAA,KAZA,CAYyCC,EAAAA,yBATzC,CAAAC,KAACC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,wBACVC,SAAU,oNCiDZ,IAAA6B,EAAA,SAAApC,GAAA,SAAAoC,0DAAuCnC,EAAvCA,EAAAA,GACEhB,OAAF2C,eAAMQ,EAANvC,UAAA,YAAA,CAAAgC,IAAE,WAA0B,OAAOlC,KAAKmC,GAAxC,WAAwD,yCACtD7C,OAAF2C,eAAMQ,EAANvC,UAAA,YAAA,CAAAgC,IAAE,WAA0B,OAAOlC,KAAKmC,GAAxC,WAAwD,yCACtD7C,OAAF2C,eAAMQ,EAANvC,UAAA,YAAA,CAAAgC,IAAE,WAA0B,OAAOlC,KAAKmC,GAAxC,WAAwD,yCAEtD7C,OAAF2C,eAAMQ,EAANvC,UAAA,gBAAA,CAAAgC,IAAE,WAAA,IAAFQ,EAAA1C,KACI,GAAMA,KAAKmC,GAAGjB,mBAAmBC,EAAAA,WAuB/B,OAAOnB,KAAKmC,GAAGjB,QAtBf,IAAMyB,EAA0B,GAC9BC,EAA4C,GAkB9C,OAhBA5C,KAAKmC,GAAGjB,QAAQ2B,IAAI,SAACrB,GACdA,EAAOkB,EAAKI,WAGXF,EAAOpB,EAAOkB,EAAKI,YACrBF,EAAOpB,EAAOkB,EAAKI,YAAYC,KAAKvB,IAEpCoB,EAAOpB,EAAOkB,EAAKI,YAAc,CAACtB,GAClCmB,EAAQI,KAAK,CACXC,MAAOxB,EAAOkB,EAAKI,WACnBG,MAAOL,EAAOpB,EAAOkB,EAAKI,eAR9BH,EAAQI,KAAKvB,KAcV0B,EAAAA,GAAaP,sCA1B1B,CAAuCpC,EAAAA,yBApCvC,CAAAC,KAACC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,sBACVC,SAAU,s8CCpBZ,IAAAuC,EAAA,SAAA9C,GAAA,SAAA8C,0DAW2C7C,EAA3CA,EAAAA,KAXA,CAW2C8C,EAAAA,4BAR3C,CAAA5C,KAACC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,0BACVC,SAAU,wJAOZyC,eAAA,CAAA,CAAA7C,KAAG8C,EAAAA,UAAH5C,KAAA,CAAa,iBAAkB,CAAC6C,KAAMC,EAAAA,sBCZtC,IAAAC,EAAA,SAAApD,GAAA,SAAAoD,0DAawCnD,EAAxCA,EAAAA,KAbA,CAawC8C,EAAAA,4BAVxC,CAAA5C,KAACC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,uBACVC,SAAU,qSASZyC,eAAA,CAAA,CAAA7C,KAAG8C,EAAAA,UAAH5C,KAAA,CAAa,iBAAkB,CAAC6C,KAAMC,EAAAA,sBCdtC,IAAAE,EAAA,SAAArD,GAAA,SAAAqD,0DAY8CpD,EAA9CA,EAAAA,KAZA,CAY8C8C,EAAAA,4BAT9C,CAAA5C,KAACC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,6BACVC,SAAU,0LAQZyC,eAAA,CAAA,CAAA7C,KAAG8C,EAAAA,UAAH5C,KAAA,CAAa,iBAAkB,CAAC6C,KAAMC,EAAAA,sBCbtC,IAAAG,EAAA,SAAAtD,GAAA,SAAAsD,0DAcqDrD,EAArDA,EAAAA,GAGEhB,OAAF2C,eAAM0B,EAANzD,UAAA,eAAA,CAAAgC,IAAE,WACE,OAAOlC,KAAKgB,MAAM4C,GAAK,8CAlB3B,CAcqDR,EAAAA,4BAXrD,CAAA5C,KAACC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,qCACVC,SAAU,yUAUZyC,eAAA,CAAA,CAAA7C,KAAG8C,EAAAA,UAAH5C,KAAA,CAAa,iBAAkB,CAAC6C,KAAMC,EAAAA,sBCftC,IAAAK,EAAA,SAAAxD,GAAA,SAAAwD,0DAmCyCvD,EAAzCA,EAAAA,GAGEuD,EAAF3D,UAAA4D,gBAAE,SAAgBC,GACV/D,KAAKmC,GAAb,WAA2B6B,SACrBhE,KAAKmC,GAAX,WAAyB6B,QAAQhE,KAAKmC,GAAInC,KAAM+D,IAI9CF,EAAF3D,UAAA+D,eAAE,SAAeF,GACT/D,KAAKmC,GAAb,UAA0B6B,SACpBhE,KAAKmC,GAAX,UAAwB6B,QAAQhE,KAAKmC,GAAInC,KAAM+D,MA9C/C,CAmCyCX,EAAAA,4BAhCzC,CAAA5C,KAACC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,wBACVC,SAAU,u7BAmBVsD,OAAQ,CAAC,uUAYXb,eAAA,CAAA,CAAA7C,KAAG8C,EAAAA,UAAH5C,KAAA,CAAa,iBAAkB,CAAC6C,KAAMC,EAAAA,sBClCtC,IAAAW,EAAA,WAAA,SAAAA,KAIA,OAHEA,EAAFjE,UAAAkE,IAAE,SAAIC,GACFA,EAAGC,qBAAqBC,YAAYxB,KAAK,SAAC/B,GAA6B,MAAA,iBAE3EmD,EAJA,GCAAK,EAAA,WAAA,SAAAA,KAIA,OAHEA,EAAFtE,UAAAkE,IAAE,SAAIC,GACFA,EAAGC,qBAAqBC,YAAYxB,KAAK,SAAC/B,GAA6B,MAAA,wBAE3EwD,EAJA,GCAAC,EAAA,WAAA,SAAAA,KAQA,OAPEA,EAAFvE,UAAAkE,IAAE,SAAIC,GACFA,EAAGC,qBAAqBC,YAAYxB,KAAK,SAAC/B,GACxC,GAAIA,GAASA,EAAMC,kBAAoBD,EAAMC,gBAAnD,WAAgFD,EAAMC,gBAAtF,YACQ,MAAO,YAIfwD,EARA,GCkBaC,EAAwB,CAEnC1C,EACA5B,EACAmC,EACAE,EACAD,EACA3B,EAGA4C,EACAC,EACAC,EACAR,EACAU,GAGWc,EAAwC,CACnDC,MAAO,CACL,CACEC,KAAM,QACNC,UAAW9C,EACX+C,SAAU,CAAC,WAAY,UAEzB,CACEF,KAAM,WACNC,UAAW1E,EACX2E,SAAU,CAAC,YACXC,eAAgB,CACd/D,gBAAiB,CACfgE,eAAe,KAIrB,CACEJ,KAAM,QACNC,UAAWvC,EACXwC,SAAU,CAAC,WAAY,SACvBC,eAAgB,CACd/D,gBAAiB,CACfC,QAAS,MAIf,CACE2D,KAAM,SACNC,UAAWrC,EACXsC,SAAU,CAAC,WAAY,SACvBC,eAAgB,CACd/D,gBAAiB,CACfC,QAAS,MAIf,CACE2D,KAAM,WACNC,UAAWtC,EACXuC,SAAU,CAAC,WAAY,SACvBC,eAAgB,CACd/D,gBAAiB,CACfiE,KAAM,EACNC,KAAM,KAIZ,CACEN,KAAM,gBACNC,UAAWjE,EACXkE,SAAU,CAAC,WAAY,SACvBC,eAAgB,CACd/D,gBAAiB,CACfC,QAAS,OAKjB6D,SAAU,CACR,CAACF,KAAM,QAASC,UAAWrB,GAC3B,CAACoB,KAAM,cAAeC,UAAWpB,GACjC,CAACmB,KAAM,qBAAsBC,UAAWnB,GACxC,CAACkB,KAAM,WAAYC,UAAW3B,GAC9B,CAAC0B,KAAM,SAAUC,UAAWjB,IAE9BuB,aAAc,CACZ,CAACC,QAAOlB,EAAqBmB,OAAQ,OACrC,CAACD,QAAOb,EAAoBc,OAAQ,OACpC,CAACD,QAAOZ,EAAgBa,OAAQ,SC1GpCC,EAAA,2BAMA,CAAA/E,KAACgF,EAAAA,SAAD9E,KAAA,CAAU,CACR+E,aAAcf,EACdgB,QAAS,CACPC,EAAAA,aACAC,EAAAA,oBACAC,EAAAA,aAAaC,QAAQnB"
}
